version: "3.8"

services:
  cintelink_app:
    build:
      context: .
      dockerfile: ./compose/local/backend/Dockerfile
    image: cintelink_app_image:latest
    container_name: cintelink_app
    command: /start
    volumes:
      - .:/src
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - postgres
      - debezium

  postgres:
    image: debezium/postgres:16-alpine
    restart: always
    volumes:
      - cintelink_db_data://var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - 5432:5432

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [ zookeeper ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 29092:29092

  debezium:
    image: debezium/connect:1.4
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: my_status_topic
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
    depends_on: [ kafka ]
    ports:
      - 8083:8083

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8085,http://localhost:8085
    ports:
      - 8085:8085
    depends_on: [ zookeeper, kafka ]

  kafkacat:
    image: confluentinc/cp-kafkacat
    depends_on:
      - cintelink_app
      - postgres
      - kafka
      - debezium
      - schema-registry
    env_file:
      - .env
    command: sh -c "sleep 30 && kafkacat -b $KAFKA_HOST:9092 -C -s key=s -s value=avro -r http://$SCHEMA_REGISTRY_HOST:8085 -t postgres.public.notification"

volumes:
  cintelink_db_data:
